{
  "version": 3,
  "sources": ["../../node_modules/@randajan/simple-lib/src/logger.js", "../../node_modules/@randajan/simple-lib/src/info/index.js", "../../node_modules/@randajan/simple-lib/src/node/index.js", "../../src/class/Country.js", "../../src/countriesDefs.js", "../../src/const.js", "../../src/class/Pattern.js", "../../src/index.js", "../src/index.js"],
  "sourcesContent": ["import chalkNative from \"chalk\";\r\n\r\nconst chalkProps = Object.getOwnPropertyNames(Object.getPrototypeOf(chalkNative)).filter(v=>v!==\"constructor\");\r\n\r\nclass Logger extends Function {\r\n    constructor(formater, chalkInit) {\r\n        super();\r\n        const chalk = chalkInit||chalkNative;\r\n\r\n        const log = (...msgs)=>{ console.log(chalk(formater(msgs))); }\r\n        const self = Object.setPrototypeOf(log.bind(), new.target.prototype);\r\n\r\n        for (const prop of chalkProps) {\r\n            Object.defineProperty(self, prop, { get: _=>new Logger(formater, chalk[prop]), enumerable:false });\r\n        }\r\n        \r\n        return self;\r\n    }\r\n}\r\n\r\nexport const logger = (...prefixes)=>{\r\n    const now = _=>(new Date()).toLocaleTimeString(\"cs-CZ\");\r\n    prefixes = prefixes.filter(v=>!!v).join(\" \");\r\n\r\n    return new Logger(msgs=>`${prefixes} | ${now()} | ${msgs.join(\" \")}`);\r\n}", "const enumerable = true;\r\nconst lockObject = o=>{\r\n    if (typeof o !== \"object\") { return o; }\r\n\r\n    const r = {};\r\n    for (const i in o) {\r\n        const descriptor = { enumerable };\r\n        let val = o[i];\r\n        if (val instanceof Array) { descriptor.get = _=>[...val]; }\r\n        else { descriptor.value = lockObject(val); }\r\n        Object.defineProperty(r, i, descriptor);\r\n    }\r\n\r\n    return r;\r\n}\r\n\r\nexport const info = lockObject(__slib_info);\r\nexport default info;", "import { parentPort } from \"worker_threads\";\r\nimport { info } from \"../info\";\r\nimport { logger } from \"../logger\";\r\n\r\nexport default info;\r\n\r\nexport const log = logger(info.name, info.version, info.env);\r\n\r\nexport {\r\n    info,\r\n}\r\n\r\nparentPort.on(\"message\", msg=>{\r\n    if (msg===\"shutdown\") { process.exit(0); }\r\n});\r\n\r\nprocess.on('uncaughtException', e=>{\r\n  console.log(e.stack);\r\n});", "import iso7064 from \"iso-7064\";\r\nimport countriesDefs from \"../countriesDefs\";\r\nimport { getPattern } from \"./Pattern\";\r\nimport { formatIBAN, validateIBAN } from \"../index\";\r\nimport { validIBAN } from \"../const\";\r\n\r\nconst _cache = {};\r\n\r\nclass Country {\r\n    constructor(countryCode) {\r\n        if (!countryCode) { throw Error(`Missing countryCode`); }\r\n\r\n        const countryRaw = countriesDefs[countryCode];\r\n        if (!countryRaw) { throw Error(`Unknown countryCode '${countryCode}'`); }\r\n\r\n        this.code = countryCode;\r\n        this.label = countryRaw.country;\r\n        this.bank = getPattern(\"bankCode\", countryRaw.bank);\r\n        this.account = getPattern(\"accountCode\", countryRaw.account);\r\n    \r\n    }\r\n\r\n    align(bank, account) {\r\n        return this.bank.align(bank)+this.account.align(account);\r\n    }\r\n\r\n    getIBAN(bank, account, format=false) {\r\n        const bban = this.align(bank, account);\r\n\r\n        const iban = this.code + ('0' + (98 - iso7064.computeWithoutCheck(bban + this.code + '00'))).slice(-2) + bban;\r\n\r\n        return format ? formatIBAN(iban) : iban;\r\n    }\r\n\r\n}\r\n\r\nexport const getCountry = countryCode=>_cache[countryCode] || (_cache[countryCode] = new Country(countryCode));\r\n", "\r\n//n = number\r\n//a = alphanumeric\r\n//c = number or alphanumeric\r\n\r\nexport default {\r\n    \"AD\":{\"country\":\"Andorra\",\"bank\":\"4n 4n\",\"account\":\"12c\"},\r\n    \"AL\":{\"country\":\"Albania\",\"bank\":\"8n\",\"account\":\"16c\"},\r\n    \"AT\":{\"country\":\"Austria\",\"bank\":\"5n\",\"account\":\"11n\"},\r\n    \"BA\":{\"country\":\"Bosnia and Herzegovina\",\"bank\":\"3n 3n\",\"account\":\"8n 2n\"},\r\n    \"BE\":{\"country\":\"Belgium\",\"bank\":\"3n\",\"account\":\"7n 2n\"},\r\n    \"BG\":{\"country\":\"Bulgaria\",\"bank\":\"4a 4n\",\"account\":\"2n 8c\"},\r\n    \"CH\":{\"country\":\"Switzerland\",\"bank\":\"5n\",\"account\":\"12c\"},\r\n    \"CY\":{\"country\":\"Cyprus\",\"bank\":\"3n 5n\",\"account\":\"16c\"},\r\n    \"CZ\":{\"country\":\"Czech Republic\",\"bank\":\"4n\",\"account\":\"16n\"},\r\n    \"DE\":{\"country\":\"Germany\",\"bank\":\"8n\",\"account\":\"10n\"},\r\n    \"DK\":{\"country\":\"Denmark\",\"bank\":\"4n\",\"account\":\"9n 1n\"},\r\n    \"EE\":{\"country\":\"Estonia\",\"bank\":\"2n\",\"account\":\"2n 11n 1n\"},\r\n    \"ES\":{\"country\":\"Spain\",\"bank\":\"4n 4n\",\"account\":\"2n 10n\"},\r\n    \"FI\":{\"country\":\"Finland\",\"bank\":\"6n\",\"account\":\"7n 1n\"},\r\n    \"FO\":{\"country\":\"Faroe Islands\",\"bank\":\"4n\",\"account\":\"9n 1n\"},\r\n    \"FR\":{\"country\":\"France\",\"bank\":\"5n 5n\",\"account\":\"11c 2n\"},\r\n    \"GB\":{\"country\":\"United Kingdom\",\"bank\":\"4a 6n\",\"account\":\"8n\"},\r\n    \"GE\":{\"country\":\"Georgia\",\"bank\":\"2a\",\"account\":\"16n\"},\r\n    \"GI\":{\"country\":\"Gibraltar\",\"bank\":\"4a\",\"account\":\"15c\"},\r\n    \"GL\":{\"country\":\"Greenland\",\"bank\":\"4n\",\"account\":\"9n 1n\"},\r\n    \"GR\":{\"country\":\"Greece\",\"bank\":\"3n 4n\",\"account\":\"16c\"},\r\n    \"HR\":{\"country\":\"Croatia\",\"bank\":\"7n\",\"account\":\"10n\"},\r\n    \"HU\":{\"country\":\"Hungary\",\"bank\":\"3n 4n\",\"account\":\"1n 15n 1n\"},\r\n    \"IE\":{\"country\":\"Ireland\",\"bank\":\"4a 6n\",\"account\":\"8n\"},\r\n    \"IL\":{\"country\":\"Israel\",\"bank\":\"3n 3n\",\"account\":\"13n\"},\r\n    \"IS\":{\"country\":\"Iceland\",\"bank\":\"4n\",\"account\":\"2n 16n\"},\r\n    \"IT\":{\"country\":\"Italy\",\"bank\":\"1a 5n 5n\",\"account\":\"12c\"},\r\n    \"KW\":{\"country\":\"Kuwait\",\"bank\":\"4a\",\"account\":\"22c\"},\r\n    \"KZ\":{\"country\":\"Kazakhstan\",\"bank\":\"3n\",\"account\":\"13c\"},\r\n    \"LB\":{\"country\":\"Lebanon\",\"bank\":\"4n\",\"account\":\"20c\"},\r\n    \"LI\":{\"country\":\"Liechtenstein\",\"bank\":\"5n\",\"account\":\"12c\"},\r\n    \"LT\":{\"country\":\"Lithuania\",\"bank\":\"5n\",\"account\":\"11n\"},\r\n    \"LU\":{\"country\":\"Luxembourg\",\"bank\":\"3n\",\"account\":\"13c\"},\r\n    \"LV\":{\"country\":\"Latvia\",\"bank\":\"4a\",\"account\":\"13c\"},\r\n    \"MC\":{\"country\":\"Monaco\",\"bank\":\"5n 5n\",\"account\":\"11c 2n\"},\r\n    \"ME\":{\"country\":\"Montenegro\",\"bank\":\"3n\",\"account\":\"13n 2n\"},\r\n    \"MK\":{\"country\":\"Macedonia\",\"bank\":\"3n\",\"account\":\"10c 2n\"},\r\n    \"MR\":{\"country\":\"Mauritania\",\"bank\":\"5n 5n\",\"account\":\"11n 2n\"},\r\n    \"MT\":{\"country\":\"Malta\",\"bank\":\"4a 5n\",\"account\":\"18c\"},\r\n    \"MU\":{\"country\":\"Mauritius\",\"bank\":\"4a 4n\",\"account\":\"15n 3a\"},\r\n    \"NL\":{\"country\":\"Netherlands\",\"bank\":\"4a\",\"account\":\"10n\"},\r\n    \"NO\":{\"country\":\"Norway\",\"bank\":\"4n\",\"account\":\"6n 1n\"},\r\n    \"PL\":{\"country\":\"Poland\",\"bank\":\"8n\",\"account\":\"16n\"},\r\n    \"PT\":{\"country\":\"Portugal\",\"bank\":\"4n 4n\",\"account\":\"11n 2n\"},\r\n    \"RO\":{\"country\":\"Romania\",\"bank\":\"4a\",\"account\":\"16c\"},\r\n    \"RS\":{\"country\":\"Serbia\",\"bank\":\"3n\",\"account\":\"13n 2n\"},\r\n    \"SA\":{\"country\":\"Saudi Arabia\",\"bank\":\"2n\",\"account\":\"18c\"},\r\n    \"SE\":{\"country\":\"Sweden\",\"bank\":\"3n\",\"account\":\"16n 1n\"},\r\n    \"SI\":{\"country\":\"Slovenia\",\"bank\":\"5n\",\"account\":\"8n 2n\"},\r\n    \"SK\":{\"country\":\"Slovak Republic\",\"bank\":\"4n\",\"account\":\"16n\"},\r\n    \"SM\":{\"country\":\"San Marino\",\"bank\":\"1a 5n 5n\",\"account\":\"12c\"},\r\n    \"TN\":{\"country\":\"Tunisia\",\"bank\":\"2n 3n\",\"account\":\"13n 2n\"},\r\n    \"TR\":{\"country\":\"Turkey\",\"bank\":\"5n\",\"account\":\"1c 16c\"}\r\n}", "\r\n\r\n\r\nexport const validPatternPart = /^([0-9]+)([anc])$/;\r\n\r\nexport const validIBAN = /^[A-Z]{2}[0-9]{2}[0-9A-Z]{11,30}$/;\r\n\r\nexport const unitsToRegEx = {\r\n    \"a\":\"[A-Z]\",\r\n    \"n\":\"[0-9]\",\r\n    \"c\":\"[A-Z0-9]\"\r\n}", "import { unitsToRegEx, validPatternPart } from \"../const\";\r\n\r\n\r\nconst decodePart = partStr=>{\r\n    const m = partStr.match(validPatternPart);\r\n    if (!m || m.length < 3) { throw Error(`Invalid pattern part '${partStr}'`) }\r\n    return { size:parseInt(m[1]), unit:m[2] };\r\n}\r\n\r\nclass Pattern {\r\n    constructor(label, patternStr) {\r\n\r\n        this.label = label;\r\n        this.patternStr = patternStr;\r\n        this.parts = [];\r\n        this.size = 0;\r\n        this.regexStr = \"\";\r\n    \r\n        for (const partStr of String(patternStr).split(\" \")) {\r\n            const part = decodePart(partStr);\r\n            const { size, unit } = part;\r\n            this.parts.push(part);\r\n            this.size += size;\r\n            this.regexStr += `${unitsToRegEx[unit]}{0,${size}}`;\r\n        }\r\n\r\n        this.regex = new RegExp(\"^\"+this.regexStr+\"$\");\r\n    \r\n    }\r\n\r\n    simplify(value) {\r\n        return String(value || \"\").toUpperCase().replace(/[^A-Z0-9]/g, \"\");\r\n    }\r\n\r\n    validate(value, simplify=true) {\r\n        if (!value) { throw Error(`Missing ${this.label}`); }\r\n        if (simplify) { value = this.simplify(value); }\r\n        const passed = this.regex.test(value);\r\n        return { value, passed }\r\n    }\r\n\r\n    isValid(value, simplify=true) {\r\n        return this.validate(value, simplify).passed;\r\n    }\r\n\r\n    align(value) {\r\n        const vld = this.validate(value, true);\r\n        if (vld.passed) { return vld.value.padStart(this.size, \"0\"); }\r\n        throw Error(`Provided ${this.label} '${value}' doesn't match pattern '${this.patternStr}'`);\r\n    }\r\n}\r\n\r\nexport const getPattern = (label, patternStr)=>new Pattern(label, patternStr);", "import { getCountry } from \"./class/Country\";\nimport { validIBAN } from \"./const\";\n\n\n\nexport const validateIBAN = iban=>{\n    return validIBAN.test(iban);\n}\n\nexport const formatIBAN = iban=>{\n    if (!validateIBAN(iban)) { return \"\"; } \n    return String(iban).split('').reduce((a, b) => a + ((a.length + 1) % 5 === 0 ? ' ' : '') + b);\n}\n\nexport const getIBAN = (country, bank, account, format=false)=>getCountry(country).getIBAN(bank, account, format);", "\nimport { info, log } from \"@randajan/simple-lib/node\";\nimport { getIBAN } from \"../../dist/index.js\";\n\n\nconsole.log(getIBAN(\"CZ\", \"3030\", \"1440052036\"));\nconsole.log(getIBAN('GB', 'WEAK123456', '12345678', true));"],
  "mappings": "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",
  "names": ["log"]
}
