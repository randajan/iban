var e={isProd:!0,name:"@randajan/iban",description:"'IBAN tools'",version:"0.1.0",author:"Jan Randa",env:"prod",mode:"node",port:4002,dir:{root:"C:\\dev\\lib\\iban",dist:"demo/dist"}};import s from"chalk";var h=Object.getOwnPropertyNames(Object.getPrototypeOf(s)).filter(n=>n!=="constructor"),l=class extends Function{constructor(n,t){super();let a=t||s,o=Object.setPrototypeOf(((...r)=>{console.log(a(n(r)))}).bind(),new.target.prototype);for(let r of h)Object.defineProperty(o,r,{get:$=>new l(n,a[r]),enumerable:!1});return o}},b=(...n)=>{let t=a=>new Date().toLocaleTimeString("cs-CZ");return n=n.filter(a=>!!a).join(" "),new l(a=>`${n} | ${t()} | ${a.join(" ")}`)};var d=!0,y=n=>{if(typeof n!="object")return n;let t={};for(let a in n){let c={enumerable:d},o=n[a];o instanceof Array?c.get=r=>[...o]:c.value=y(o),Object.defineProperty(t,a,c)}return t},u=y(e);import{parentPort as f}from"worker_threads";var z=b(u.name,u.version,u.env);f.on("message",n=>{n==="shutdown"&&process.exit(0)});process.on("uncaughtException",n=>{console.log(n.stack)});import m from"iso-7064";var v={AD:{country:"Andorra",bank:"4n 4n",account:"12c"},AL:{country:"Albania",bank:"8n",account:"16c"},AT:{country:"Austria",bank:"5n",account:"11n"},BA:{country:"Bosnia and Herzegovina",bank:"3n 3n",account:"8n 2n"},BE:{country:"Belgium",bank:"3n",account:"7n 2n"},BG:{country:"Bulgaria",bank:"4a 4n",account:"2n 8c"},CH:{country:"Switzerland",bank:"5n",account:"12c"},CY:{country:"Cyprus",bank:"3n 5n",account:"16c"},CZ:{country:"Czech Republic",bank:"4n",account:"16n"},DE:{country:"Germany",bank:"8n",account:"10n"},DK:{country:"Denmark",bank:"4n",account:"9n 1n"},EE:{country:"Estonia",bank:"2n",account:"2n 11n 1n"},ES:{country:"Spain",bank:"4n 4n",account:"2n 10n"},FI:{country:"Finland",bank:"6n",account:"7n 1n"},FO:{country:"Faroe Islands",bank:"4n",account:"9n 1n"},FR:{country:"France",bank:"5n 5n",account:"11c 2n"},GB:{country:"United Kingdom",bank:"4a 6n",account:"8n"},GE:{country:"Georgia",bank:"2a",account:"16n"},GI:{country:"Gibraltar",bank:"4a",account:"15c"},GL:{country:"Greenland",bank:"4n",account:"9n 1n"},GR:{country:"Greece",bank:"3n 4n",account:"16c"},HR:{country:"Croatia",bank:"7n",account:"10n"},HU:{country:"Hungary",bank:"3n 4n",account:"1n 15n 1n"},IE:{country:"Ireland",bank:"4a 6n",account:"8n"},IL:{country:"Israel",bank:"3n 3n",account:"13n"},IS:{country:"Iceland",bank:"4n",account:"2n 16n"},IT:{country:"Italy",bank:"1a 5n 5n",account:"12c"},KW:{country:"Kuwait",bank:"4a",account:"22c"},KZ:{country:"Kazakhstan",bank:"3n",account:"13c"},LB:{country:"Lebanon",bank:"4n",account:"20c"},LI:{country:"Liechtenstein",bank:"5n",account:"12c"},LT:{country:"Lithuania",bank:"5n",account:"11n"},LU:{country:"Luxembourg",bank:"3n",account:"13c"},LV:{country:"Latvia",bank:"4a",account:"13c"},MC:{country:"Monaco",bank:"5n 5n",account:"11c 2n"},ME:{country:"Montenegro",bank:"3n",account:"13n 2n"},MK:{country:"Macedonia",bank:"3n",account:"10c 2n"},MR:{country:"Mauritania",bank:"5n 5n",account:"11n 2n"},MT:{country:"Malta",bank:"4a 5n",account:"18c"},MU:{country:"Mauritius",bank:"4a 4n",account:"15n 3a"},NL:{country:"Netherlands",bank:"4a",account:"10n"},NO:{country:"Norway",bank:"4n",account:"6n 1n"},PL:{country:"Poland",bank:"8n",account:"16n"},PT:{country:"Portugal",bank:"4n 4n",account:"11n 2n"},RO:{country:"Romania",bank:"4a",account:"16c"},RS:{country:"Serbia",bank:"3n",account:"13n 2n"},SA:{country:"Saudi Arabia",bank:"2n",account:"18c"},SE:{country:"Sweden",bank:"3n",account:"16n 1n"},SI:{country:"Slovenia",bank:"5n",account:"8n 2n"},SK:{country:"Slovak Republic",bank:"4n",account:"16n"},SM:{country:"San Marino",bank:"1a 5n 5n",account:"12c"},TN:{country:"Tunisia",bank:"2n 3n",account:"13n 2n"},TR:{country:"Turkey",bank:"5n",account:"1c 16c"}},S=/^([0-9]+)([anc])$/,A=/^[A-Z]{2}[0-9]{2}[0-9A-Z]{11,30}$/,I={a:"[A-Z]",n:"[0-9]",c:"[A-Z0-9]"},w=n=>{let t=n.match(S);if(!t||t.length<3)throw Error(`Invalid pattern part '${n}'`);return{size:parseInt(t[1]),unit:t[2]}},E=class{constructor(n,t){this.label=n,this.patternStr=t,this.parts=[],this.size=0,this.regexStr="";for(let a of String(t).split(" ")){let c=w(a),{size:o,unit:r}=c;this.parts.push(c),this.size+=o,this.regexStr+=`${I[r]}{0,${o}}`}this.regex=new RegExp("^"+this.regexStr+"$")}simplify(n){return String(n||"").toUpperCase().replace(/[^A-Z0-9]/g,"")}validate(n,t=!0){if(!n)throw Error(`Missing ${this.label}`);t&&(n=this.simplify(n));let a=this.regex.test(n);return{value:n,passed:a}}isValid(n,t=!0){return this.validate(n,t).passed}align(n){let t=this.validate(n,!0);if(t.passed)return t.value.padStart(this.size,"0");throw Error(`Provided ${this.label} '${n}' doesn't match pattern '${this.patternStr}'`)}},k=(n,t)=>new E(n,t),g={},L=class{constructor(n){if(!n)throw Error("Missing countryCode");let t=v[n];if(!t)throw Error(`Unknown countryCode '${n}'`);this.code=n,this.label=t.country,this.bank=k("bankCode",t.bank),this.account=k("accountCode",t.account)}align(n,t){return this.bank.align(n)+this.account.align(t)}getIBAN(n,t,a=!1){let c=this.align(n,t),o=this.code+("0"+(98-m.computeWithoutCheck(c+this.code+"00"))).slice(-2)+c;return a?C(o):o}},M=n=>g[n]||(g[n]=new L(n)),B=n=>A.test(n),C=n=>B(n)?String(n).split("").reduce((t,a)=>t+((t.length+1)%5===0?" ":"")+a):"",i=(n,t,a,c=!1)=>M(n).getIBAN(t,a,c);console.log(i("CZ","3030","1440052036"));console.log(i("GB","WEAK123456","12345678",!0));
//# sourceMappingURL=index.js.map
